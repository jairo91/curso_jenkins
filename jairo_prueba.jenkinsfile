// def triggers = []
// echo "Executing every 1 min..."
// triggers << cron('* * * * *') // every 1 minute


// properties (
//     [
//         pipelineTriggers(triggers)
//     ]
// )

def exceutionMaven(){
		bat 'mvn clean'
		bat 'mvn package'
}


node ('esclavo'){
	try{
		stage('Delelete workspace'){
			cleanWs()
		}

		stage('Checkout'){
			echo "La rama es: ${env.branch}"
			checkout scmGit(branches: [[name: "*/${env.branch}"]], extensions: [], userRemoteConfigs: [[url: 'https://github.com/jairo91/curso_jenkins.git']])
		}

		stage('Node version'){
			bat 'node -v'
			nodejs('node_v14.4.0') {
				bat 'node -v'
			}
			bat 'node -v'
		}

		stage('Dir'){
			dir('reports') {
				bat 'ls'
			}
		}

		stage('Build'){
			exceutionMaven()
		}

		stage('Execution'){
			bat 'java -cp target/Jenkins-1.jar Execute.Launcher'
		}

		stage('Copy artefact'){
			archiveArtifacts artifacts: 'application/app-debug.apk', followSymlinks: false
		}

		stage('Cucumber report'){
			cucumber buildStatus: 'null', customCssFiles: '', customJsFiles: '', failedFeaturesNumber: -1, failedScenariosNumber: -1, failedStepsNumber: -1, fileIncludePattern: 'reports/*.json', pendingStepsNumber: -1, skippedStepsNumber: -1, sortingMethod: 'ALPHABETICAL', undefinedStepsNumber: -1
		}

		stage('Notifiation email'){
			mail bcc: '', body: 'Body Jairo', cc: '', from: '', replyTo: '', subject: 'Subject Jairo', to: 'jairo.mendez@grupoonetec.com'
		}
	}catch(error){
		currentBuild.result = 'SUCCESS'
	}	
}